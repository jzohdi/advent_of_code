{"message":"the trait bound `HashMap<char, usize>: Hash` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":"the trait `Hash` is not implemented for `HashMap<char, usize>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[cached]","def_site_span":{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached_proc_macro-0.7.1/src/lib.rs","byte_start":2325,"byte_end":2392,"line_start":58,"line_end":58,"column_start":1,"column_end":68,"is_primary":false,"text":[{"text":"pub fn cached(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Hash` for `&mut HashMap<char, usize>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Hash` for `((char, char), usize, &mut HashMap<char, usize>, &HashMap<(char, char), char>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `UnboundCache::<K, V>::new`","code":null,"level":"note","spans":[{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs","byte_start":953,"byte_end":987,"line_start":44,"line_end":44,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"    pub fn new() -> UnboundCache<K, V> {","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `HashMap<char, usize>: Hash` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/day_fourteen/mod.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cached]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Hash` is not implemented for `HashMap<char, usize>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Hash` for `&mut HashMap<char, usize>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Hash` for `((char, char), usize, &mut HashMap<char, usize>, &HashMap<(char, char), char>)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `UnboundCache::<K, V>::new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs:44:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new() -> UnboundCache<K, V> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `cached` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `HashMap<(char, char), char>: Hash` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":"the trait `Hash` is not implemented for `HashMap<(char, char), char>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[cached]","def_site_span":{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached_proc_macro-0.7.1/src/lib.rs","byte_start":2325,"byte_end":2392,"line_start":58,"line_end":58,"column_start":1,"column_end":68,"is_primary":false,"text":[{"text":"pub fn cached(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `Hash` for `&HashMap<(char, char), char>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"1 redundant requirement hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Hash` for `((char, char), usize, &mut HashMap<char, usize>, &HashMap<(char, char), char>)`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `UnboundCache::<K, V>::new`","code":null,"level":"note","spans":[{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs","byte_start":953,"byte_end":987,"line_start":44,"line_end":44,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"    pub fn new() -> UnboundCache<K, V> {","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `HashMap<(char, char), char>: Hash` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/day_fourteen/mod.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cached]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Hash` is not implemented for `HashMap<(char, char), char>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Hash` for `&HashMap<(char, char), char>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: 1 redundant requirement hidden\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Hash` for `((char, char), usize, &mut HashMap<char, usize>, &HashMap<(char, char), char>)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `UnboundCache::<K, V>::new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs:44:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn new() -> UnboundCache<K, V> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `cached` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the method `cache_get` exists for struct `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":"method cannot be called on `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[cached]","def_site_span":{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached_proc_macro-0.7.1/src/lib.rs","byte_start":2325,"byte_end":2392,"line_start":58,"line_end":58,"column_start":1,"column_end":68,"is_primary":false,"text":[{"text":"pub fn cached(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs","byte_start":378,"byte_end":407,"line_start":17,"line_end":17,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub struct UnboundCache<K, V> {","highlight_start":1,"highlight_end":30}],"label":"doesn't satisfy `_: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>): Hash`\nwhich is required by `UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `cache_get` exists for struct `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/day_fourteen/mod.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cached]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct UnboundCache<K, V> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>): Hash`\u001b[0m\n\u001b[0m           which is required by `UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `cached` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the method `cache_set` exists for struct `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":"method cannot be called on `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/day_fourteen/mod.rs","byte_start":1493,"byte_end":1502,"line_start":54,"line_end":54,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"#[cached]","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[cached]","def_site_span":{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached_proc_macro-0.7.1/src/lib.rs","byte_start":2325,"byte_end":2392,"line_start":58,"line_end":58,"column_start":1,"column_end":68,"is_primary":false,"text":[{"text":"pub fn cached(args: TokenStream, input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs","byte_start":378,"byte_end":407,"line_start":17,"line_end":17,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub struct UnboundCache<K, V> {","highlight_start":1,"highlight_end":30}],"label":"doesn't satisfy `_: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>): Hash`\nwhich is required by `UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `cache_set` exists for struct `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/day_fourteen/mod.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cached]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `std::sync::MutexGuard<'_, UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/jzohdi/.cargo/registry/src/github.com-1ecc6299db9ec823/cached-0.26.2/src/stores/unbound.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct UnboundCache<K, V> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>): Hash`\u001b[0m\n\u001b[0m           which is required by `UnboundCache<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>: Cached<((char, char), usize, &'static mut HashMap<char, usize>, &'static HashMap<(char, char), char>), ()>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `cached` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
